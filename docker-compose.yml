version: '3'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: first-docker-frontend
    restart: unless-stopped
    command: serve -s build -l 3000
    stdin_open: true
    tty: true
    volumes:
      - ./frontend/src:/usr/src/app/src
    networks:
      - first-docker-network

  api:
    build: ./api
    container_name: first-docker-api
    command: npm run start
    restart: unless-stopped
    env_file:
      - ./api/.env
    depends_on:
      - api_db
    networks:
      - first-docker-network

  auth:
    build: ./auth
    container_name: first-docker-auth
    command: npm run start
    restart: unless-stopped
    env_file:
      - ./auth/.env
    depends_on:
      - auth_db
    networks:
      - first-docker-network

  api_db:
    image: mongo:latest
    container_name: first-docker-api-db
    volumes:
      - mongodb_api:/data/db
    networks:
      - first-docker-network

  auth_db:
    image: mongo:latest
    container_name: first-docker-auth-db
    volumes:
      - mongodb_auth:/data/db
    networks:
      - first-docker-network

  nginx:
    image: nginx:stable-alpine
    container_name: first-docker-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
    networks:
      - first-docker-network

volumes:
  mongodb_api:
  mongodb_auth:

networks:
  first-docker-network:
    driver: bridge


